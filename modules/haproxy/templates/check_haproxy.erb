#!/bin/bash

OK="OK"
EOK=0
WARN="WARNING"
EWARN=1
CRIT="CRITICAL"
ECRIT=2

socket="<%= @socket %>"
check="check_alive"

for var in "$@"; do

    if [[ "$var" =~ ^--check=(.+) ]]; then
        check="check_${BASH_REMATCH[1]}"
    fi

    if [[ "$var" =~ ^--socket=(.+) ]]; then
        socket="${BASH_REMATCH[1]}"
    fi

done

# Check service normal response
if [ "$check" == "check_alive" ]; then

    up=$(echo "show info" | socat stdio "$socket" | grep -E '^Uptime_sec' | awk '{print $2}')

    if [[ "$up" =~ ^[0-9]+$ ]]; then

        if [ "$up" -lt 300 ]; then
            echo "${WARN} ${check} recent restart ${up}s"
            exit $EWARN
        fi

        echo "${OK} ${check} uptime ${up}s"
        exit $EOK
    fi

    echo "${CRIT} ${check} invalid response"
    exit $ECRIT

fi

if [ "$check" != "check_failover" ] && [ "$check" != "check_someup" ] ; then
    echo "${CRIT} unkown check ${check} "
    exit $ECRIT
fi

OUTPUT=$(echo "show stat" | socat stdio "$socket")
up=$(grep -c L7OK <<< "$OUTPUT")
down=$(grep -c DOWN <<< "$OUTPUT")
down_string=$(grep DOWN <<< "$OUTPUT" | awk -F',' '{print $1","$2}')
msg="servers up ${up} down ${down}:\n${down_string}"

if [ "$check" == "check_failover" ] && [ "$down" -eq 0 ] ; then
    # Check a primary/secondary pair for failover
    echo -e "${OK} ${check} ${msg}"
    exit $EOK
fi
if [ "$check" == "check_someup" ] && [ "$up" -gt 0 ] ; then
    # Check at least some backends are UP
    echo -e "${OK} ${check} ${msg}"
    exit $EOK
fi

echo -e "${CRIT} ${check} ${msg}"
exit $ECRIT
